package com.kevinherron.opcua.mtconnect.model.types;

import java.util.StringJoiner;
import org.eclipse.milo.opcua.stack.core.NamespaceTable;
import org.eclipse.milo.opcua.stack.core.encoding.EncodingContext;
import org.eclipse.milo.opcua.stack.core.encoding.GenericDataTypeCodec;
import org.eclipse.milo.opcua.stack.core.encoding.UaDecoder;
import org.eclipse.milo.opcua.stack.core.encoding.UaEncoder;
import org.eclipse.milo.opcua.stack.core.types.UaStructuredType;
import org.eclipse.milo.opcua.stack.core.types.builtin.ExpandedNodeId;
import org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;
import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;
import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;
import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned;
import org.eclipse.milo.opcua.stack.core.types.enumerated.StructureType;
import org.eclipse.milo.opcua.stack.core.types.structured.Structure;
import org.eclipse.milo.opcua.stack.core.types.structured.StructureDefinition;
import org.eclipse.milo.opcua.stack.core.types.structured.StructureField;
import org.eclipse.milo.opcua.stack.core.util.codegen.EqualsBuilder;
import org.eclipse.milo.opcua.stack.core.util.codegen.HashCodeBuilder;
import org.jspecify.annotations.Nullable;

public class MessageDataType extends Structure implements UaStructuredType {
  public static final ExpandedNodeId TYPE_ID =
      ExpandedNodeId.parse("nsu=http://opcfoundation.org/UA/MTConnect/v2/;i=2653");

  public static final ExpandedNodeId BINARY_ENCODING_ID =
      ExpandedNodeId.parse("nsu=http://opcfoundation.org/UA/MTConnect/v2/;i=2903");

  public static final ExpandedNodeId XML_ENCODING_ID =
      ExpandedNodeId.parse("nsu=http://opcfoundation.org/UA/MTConnect/v2/;i=2906");

  public static final ExpandedNodeId JSON_ENCODING_ID =
      ExpandedNodeId.parse("nsu=http://opcfoundation.org/UA/MTConnect/v2/;i=2908");

  private final @Nullable String nativeCode;

  private final @Nullable String text;

  public MessageDataType(@Nullable String nativeCode, @Nullable String text) {
    this.nativeCode = nativeCode;
    this.text = text;
  }

  @Override
  public ExpandedNodeId getTypeId() {
    return TYPE_ID;
  }

  @Override
  public ExpandedNodeId getBinaryEncodingId() {
    return BINARY_ENCODING_ID;
  }

  @Override
  public ExpandedNodeId getXmlEncodingId() {
    return XML_ENCODING_ID;
  }

  @Override
  public ExpandedNodeId getJsonEncodingId() {
    return JSON_ENCODING_ID;
  }

  public @Nullable String getNativeCode() {
    return nativeCode;
  }

  public @Nullable String getText() {
    return text;
  }

  @Override
  public boolean equals(Object object) {
    if (this == object) {
      return true;
    } else if (object == null || getClass() != object.getClass()) {
      return false;
    }
    MessageDataType that = (MessageDataType) object;
    var eqb = new EqualsBuilder();
    eqb.append(getNativeCode(), that.getNativeCode());
    eqb.append(getText(), that.getText());
    return eqb.build();
  }

  @Override
  public int hashCode() {
    var hcb = new HashCodeBuilder();
    hcb.append(getNativeCode());
    hcb.append(getText());
    return hcb.build();
  }

  @Override
  public String toString() {
    var joiner = new StringJoiner(", ", MessageDataType.class.getSimpleName() + "[", "]");
    joiner.add("nativeCode='" + getNativeCode() + "'");
    joiner.add("text='" + getText() + "'");
    return joiner.toString();
  }

  public static StructureDefinition definition(NamespaceTable namespaceTable) {
    return new StructureDefinition(
        ExpandedNodeId.parse("nsu=http://opcfoundation.org/UA/MTConnect/v2/;i=2903")
            .toNodeId(namespaceTable)
            .orElseThrow(),
        ExpandedNodeId.parse("nsu=http://opcfoundation.org/UA/;i=22")
            .toNodeId(namespaceTable)
            .orElseThrow(),
        StructureType.StructureWithOptionalFields,
        new StructureField[] {
          new StructureField(
              "NativeCode",
              new LocalizedText(
                  "",
                  "The native code (usually an alpha-numeric value) generated by the controller of"
                      + " a piece of equipment or the element."),
              new NodeId(0, 12),
              -1,
              null,
              UInteger.valueOf(0),
              true),
          new StructureField(
              "Text",
              LocalizedText.NULL_VALUE,
              new NodeId(0, 12),
              -1,
              null,
              UInteger.valueOf(0),
              false)
        });
  }

  public static final class Codec extends GenericDataTypeCodec<MessageDataType> {
    @Override
    public Class<MessageDataType> getType() {
      return MessageDataType.class;
    }

    @Override
    public MessageDataType decodeType(EncodingContext context, UaDecoder decoder) {
      final String nativeCode;
      final String text;
      final long encodingMask = decoder.decodeUInt32("EncodingMask").longValue();
      if ((encodingMask & (1L << 0)) != 0) {
        nativeCode = decoder.decodeString("NativeCode");
      } else {
        nativeCode = null;
      }
      text = decoder.decodeString("Text");
      return new MessageDataType(nativeCode, text);
    }

    @Override
    public void encodeType(EncodingContext context, UaEncoder encoder, MessageDataType value) {
      long encodingMask = 0L;
      if (value.getNativeCode() != null) {
        encodingMask |= (1L << 0);
      }
      encoder.encodeUInt32("EncodingMask", Unsigned.uint(encodingMask));
      if (value.getNativeCode() != null) {
        encoder.encodeString("NativeCode", value.getNativeCode());
      }
      encoder.encodeString("Text", value.getText());
    }
  }
}
